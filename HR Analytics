1-) First, I imported the necessary files into the PowerBI program.

2-) To start the analysis and connect the necessary tables, I opened the model view section and made the necessary merges.

3-) I created a new table named _Measure. And I wrote my first DAX code to reach the total number of employees via the Card view.

    -TotalEmployees = TotalEmployees = COUNT(DimEmployee[EmployeeID])

    *According to the result obtained here, there are a total of 1470 employees.

    To find the number of employees currently working and not working in the company, I created two more Measures.

    -ActiveEmployee = CALCULATE([TotalEmployees], DimEmployee[Attrition] = "No")
    -InactiveEmployee = CALCULATE([TotalEmployees], DimEmployee[Attrition] = "Yes")

     *According to the result obtained here, there are 1233 actively working employees, and the number of employees in an 
      inactive status is 237.


4-) Then, to find the Attrition Rate, I created a new Measure with a DAX code. Then, I converted the result into a percentage.

    -AttritionRate = DIVIDE([InactiveEmployee], [TotalEmployees])

    *According to the result obtained here, the Attrition Rate is 16.1%."


5-) I created a Stacked Column Chart with date and totalemployee, but I reached an undesirable result. To fix this, 
    I need to adjust the relationships. For this purpose, I created a new measure with DAX.
 
    -TotalEmployeesDate = CALCULATE ([TotalEmployees], USERELATIONSHIP ( DimEmployee[HireDate], DimDate[Date] ))

     Then, I replaced TotalEmployee with the newly created measure. Then, I added Attrition and obtained a graph. I changed the Continuous value to 
     Categorical. I also renamed the table to 'Employee Hiring Dates'.

6-) 6-) To see the number of employees by department, I used the Tree visualization option. I used Department and Active Employee Measure here. 
        To delve further into detail, I also included JobRole. 
   
    *According to the result obtained here, the highest number of employees belongs to the Technology department, specifically in the 
     Software Engineer job role.

---KEY INSIGHTS

+Atlas Labs has employeed over 1470 people.
+Atlas Labs currently employs over 1200 people.
+The largest department by far is Technology.
+The atrittion rate for employees leaving the organization is %16


7-) Now, I've opened a new page to investigate the demographic characteristics of the employees. First, I created two new measures using DAX 
    code to find the minimum and maximum age ratio.

    -MaxAge = MAX(DimEmployee[Age])
    -MinAge = MAX(DimEmployee[Age])

     *According to the result obtained here, the oldest employee is 51 years old, and the youngest is 18.


8-) I created a Conditional Column in PowerQuery to divide ages into intervals for the DimEmployee table. Then I used a Stacked Column Chart to 
    visualize this age distribution more conveniently.

9-) I used a Stacked Column Chart to visualize the gender and age distribution. Then, I applied a relevant filter to the page to view whether 
    they are currently employed in the company.

10-) I created a PieChart to see the marital status of the employees.

11-) To see the Average Salary, I created a new measure with DAX code.
      
     -AVGSalary = AVERAGE(DimEmployee[Salary])


12-) Then, I used a Line and Stacked Column Chart to visualize the average salary by ethnicity, using the average salary, ethnicity, and 
     the number of company employees.

13-) Now, I've created a new page. And using the DAX code below, I created a new column to see the first name and last name information 
     in the same column.

      -FullName = COMBINEVALUES(" ", DimEmployee[FirstName], DimEmployee[LastName])

     Then I added a Slicer. And by creating a Card visual, I added the HireDate. This way, thanks to the Slicer, I can see the hiring date of 
     the selected person.


14-) Next, to be able to see the date of the last performance review, I wrote the following DAX code and created a Card Visual:

     -LastReviewDate = IF (MAX ( FactPerformanceRating[ReviewDate] ) = BLANK (), "No Review Yet", MAX ( FactPerformanceRating[ReviewDate] ))

15-) Then, to be able to see the next performance review date, I used the Card Visualize by writing the following DAX code:

     -NextReviewDate = VAR reviewOrHire = IF (MAX ( FactPerformanceRating[ReviewDate] ) = BLANK (),
        MAX ( DimEmployee[HireDate] ),
        MAX ( FactPerformanceRating[ReviewDate] ))
      RETURN
      reviewOrHire + 365

16-) Then, I wrote the following DAX code to get the Maximum value of how satisfied they are with their job:

     -JobSatisfaction = MAX(FactPerformanceRating[JobSatisfaction])


17-) I realize that I need to write more Measures, but I notice there is no active relationship among them. 
     To activate this, I wrote the following DAX codes:

     -EnvironmentSatisfaction = CALCULATE (
    MAX ( FactPerformanceRating[EnvironmentSatisfaction] ),
    USERELATIONSHIP ( FactPerformanceRating[EnvironmentSatisfaction], DimSatisfiedLevel[SatisfactionID] ))

    -RelationshipSatisfaction = CALCULATE (
    MAX ( FactPerformanceRating[RelationshipSatisfaction] ),
    USERELATIONSHIP ( FactPerformanceRating[RelationshipSatisfaction], DimSatisfiedLevel[SatisfactionID] ))

    -WorkLifeBalance = CALCULATE (
    MAX ( FactPerformanceRating[WorkLifeBalance] ),
    USERELATIONSHIP ( FactPerformanceRating[WorkLifeBalance], DimSatisfiedLevel[SatisfactionID] ))


18-) Now, with these newly created DAX codes and Measures, I can obtain new visualizations.
     I visualized the Measures I created with a LineChart, based on the year.

19-) Now, I want to create a new measure:

     -SelfRating = CALCULATE (
    MAX ( FactPerformanceRating[SelfRating] ),
    USERELATIONSHIP ( FactPerformanceRating[SelfRating], DimRatingLevel[RatingID] ))

     -ManagerRating = CALCULATE (
    MAX ( FactPerformanceRating[ManagerRating] ),
    USERELATIONSHIP ( FactPerformanceRating[ManagerRating], DimRatingLevel[RatingID] ))
  
     Then, I visualized these new Measures again with a LineChart.

    ***Upon examination, our employee Estelle Chung received a rating of 2/5, "Need Improvement," from their managers in the year 2022.
    In this case, the company should organize a meeting to discuss needs and create an improvement plan with Estelle Chung.

--- KEY INSIGHTS

-Majority of employees are between 20-29 years old.
-Currently, Atlas Labs employs 2.7% more women than men.
-Employees who identify as non-binary make up 8.5% of the total employees.
-White employees have the highest average salary.
-Employees of mixed or multiple ethnic groups have one of the lowest average salaries.

20-) I created a new page to visualize the Attrition Rate. To see this, I first created a Card Visual and then a 
     Stacked Column Chart for each department and job role. I put Department and JobRole on the X-axis and % Attrition Rate on the Y-axis.

21-) Now, to calculate the Attrition Rate based on HireDate, I created two new measures using DAX code.

     -InactiveEmployeesDate = CALCULATE([InactiveEmployees], USERELATIONSHIP(DimEmployee[HireDate], DimDate[Date]))

     -% Attrition Rate Date = DIVIDE([InactiveEmployeesDate], [TotalEmployeesDate])

     Then, I converted Attrition Rate Date into a percentage.

22-) Using a LineChart, I visualized % Attrition Rate Date. I put DATE on the X-axis and % Attrition Rate Date on the Y-axis.

   **From this, I concluded that the department and job role with the highest Attrition Rate are Sales - Sales Representative.

23-) Now, to better visualize the Attrition Rate, I used a Line and Stacked Chart. I added BusinessTravel to this visualization. 
    I put BusinessTravel on the X-axis, Attrition Rate on the Y-axis, and TotalEmployees on the secondary Y-axis.

   ***From this, I gathered that the group with the highest attrition rate frequently goes on business trips, with a rate of 24.9%.

24-) In addition to business trips, I wanted to see the Attrition Rate for employees who work overtime compared to those who don't. 
     For this, I used a Stacked Column Chart with OverTime on the X-axis and % Attrition Rate on the Y-axis.

   ***From this, I found that employees who are required to work overtime have a higher Attrition Rate compared to those who aren't 
      required, with a rate of 30.5%.

25-) Using the number of years employees have worked, I wanted to see the Attrition Rate. For this, I used a new stacked column 
     chart with YearAtCompany on the X-axis and % Attrition Rate on the Y-axis.

   ***From this, I observed that the highest attrition rate is among employees with 0-2 years of service. I also noticed a decrease 
      in attrition rate after employees have been with the company for longer years.

+++Recommendation on this Matter+++

As a recommendation to reduce the Attrition Rate among employees who go on business trips, it could be suggested to 
review the travel requirement policy and survey employees on feelings around travel frequency.

26-) Now, I will further enhance the visualizations we have created.

     -I changed the background color for all pages.
     -I created a Navigation Bar.
     -I resized the visuals.
     -I changed the theme.


    
